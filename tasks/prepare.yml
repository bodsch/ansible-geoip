---

- name: include OS specific configuration ({{ ansible_distribution }} ({{ ansible_os_family }}) {{ ansible_distribution_major_version }})
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      paths:
        - "vars"
      files:
        # eg. debian-10 / ubuntu-20.04 / centos-8 / oraclelinux-8
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
        # eg. archlinux-systemd / archlinux-openrc
        - "{{ ansible_distribution | lower }}-{{ ansible_service_mgr | lower }}.yml"
        # eg. debian / ubuntu / centos / oraclelinux
        - "{{ ansible_distribution | lower }}.yml"
        # eg. redhat / debian / archlinux
        - "{{ ansible_os_family | lower }}.yml"
        # artixlinux
        - "{{ ansible_os_family | lower | replace(' ', '') }}.yml"
        - main.yml
      skip: true

- name: install requirements
  ansible.builtin.package:
    name: "{{ geoip_dependencies }}"
    state: present
  when:
    - geoip_dependencies | default([]) | count > 0

- name: create download directory
  ansible.builtin.file:
    path: "{{ geoip_remote_tmp_directory }}"
    state: directory
    mode: "0750"
  check_mode: false

- name: create installation directory
  ansible.builtin.file:
    path: "{{ geoip_destination }}"
    state: directory
    mode: "0750"
  check_mode: false

- name: define geoip download files
  ansible.builtin.set_fact:
    geoip_download_files: "{{ geoip_databases | geoip_downloads() }}"

...
